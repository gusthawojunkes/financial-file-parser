name: Update Version on Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag (e.g., 1.0.0)'
        required: true
        default: '0.0.0'

jobs:
  update-gradle-version:
    name: "Update version"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'release' && 'main' || github.ref }}

      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Update version in build.gradle.kts
        run: |
          NEW_VERSION="${{ steps.get_version.outputs.VERSION }}"
          # Remove 'v' prefix if present (e.g., v1.0.0 -> 1.0.0)
          NEW_VERSION="${NEW_VERSION#v}"
          echo "Updating version to: $NEW_VERSION"
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" build.gradle.kts

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "chore: Update version to ${{ steps.get_version.outputs.VERSION }} from release"
          branch: "feature/update-version-${{ steps.get_version.outputs.VERSION }}"
          delete-branch: true
          title: "chore: Update application version to ${{ steps.get_version.outputs.VERSION }}"
          body: "This PR updates the application version in `build.gradle.kts` to `${{ steps.get_version.outputs.VERSION }}` based on a new release or manual trigger."
          base: master
          labels: |
            automation
            dependencies
          assignees: ${{ github.actor }}
